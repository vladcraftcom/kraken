name: release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-matrix:
    name: build ${{ matrix.os }} ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-14
            target: aarch64-apple-darwin
            artifact: kraken-Darwin-arm64
          - os: macos-13
            target: x86_64-apple-darwin
            artifact: kraken-Darwin-x86_64
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
            artifact: kraken-Linux-x86_64
          - os: ubuntu-22.04
            target: aarch64-unknown-linux-gnu
            artifact: kraken-Linux-arm64
          - os: windows-2022
            target: x86_64-pc-windows-msvc
            artifact: kraken-Windows-x86_64.exe
          - os: windows-2022
            target: aarch64-pc-windows-msvc
            artifact: kraken-Windows-arm64.exe

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install cross deps (Linux aarch64)
        if: matrix.os == 'ubuntu-22.04' && matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu
          echo "CC_aarch64_unknown_linux_gnu=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo "AR_aarch64_unknown_linux_gnu=aarch64-linux-gnu-ar" >> $GITHUB_ENV

      - name: Build
        shell: bash
        run: |
          cargo build -r --target ${{ matrix.target }}

      - name: Prepare artifact name
        id: prep
        shell: bash
        run: |
          BIN_NAME=kraken
          EXT=""
          case "${{ matrix.target }}" in \
            *windows*) EXT=".exe" ;; \
          esac
          echo "ext=$EXT" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: target/${{ matrix.target }}/release/kraken${{ steps.prep.outputs.ext }}

  release:
    needs: build-matrix
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: false
          files: |
            dist/**/kraken*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
